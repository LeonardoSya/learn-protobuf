// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "management.proto" (package "trpc.creator_center.mcn", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Management } from "./management";
import type { BatchCheckIncomeStatusModificationWhitelistConditionsRsp } from "./management";
import type { BatchCheckIncomeStatusModificationWhitelistConditionsReq } from "./management";
import type { ClearMcnRsp } from "./management";
import type { ClearMcnReq } from "./management";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ClearRsp } from "./management";
import type { ClearReq } from "./management";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
// 建议使用谷歌protobuf规范 遵循PB语法检查 
// 谷歌protobuf规范地址：https://developers.google.com/protocol-buffers/docs/style
// Proto格式检查（Tencent）包含：Google protobuf规范和数据校验检查 

// 不建议使用 google/protobuf/any.proto 
// any强依赖package type.googleapis.com/_packagename_._messagename_.   
// https://developers.google.com/protocol-buffers/docs/proto3#any 

// tRPC-Go数据校验模块（**移除注释使用**） 
// tsecstr仅允许中英文字母、数字、=、+、/、@、#、_、-传入。注意，字符集不包括空格、|等符号，如有需要，请自定义校验表达式。
// 详参见规则手册：https://iwiki.woa.com/pages/viewpage.action?pageId=241919333  

/**
 * mcn管理台相关接口
 *
 * @generated from protobuf service trpc.creator_center.mcn.Management
 */
export interface IManagementClient {
    /**
     * 清退
     *
     * @generated from protobuf rpc: Clear
     */
    clear(input: ClearReq, options?: RpcOptions): UnaryCall<ClearReq, ClearRsp>;
    /**
     * 清退 (trpc接口)
     *
     * @generated from protobuf rpc: ClearMcn
     */
    clearMcn(input: ClearMcnReq, options?: RpcOptions): UnaryCall<ClearMcnReq, ClearMcnRsp>;
    /**
     * 校验代结算状态修改白名单的申请条件
     *
     * @generated from protobuf rpc: BatchCheckIncomeStatusModificationWhitelistConditions
     */
    batchCheckIncomeStatusModificationWhitelistConditions(input: BatchCheckIncomeStatusModificationWhitelistConditionsReq, options?: RpcOptions): UnaryCall<BatchCheckIncomeStatusModificationWhitelistConditionsReq, BatchCheckIncomeStatusModificationWhitelistConditionsRsp>;
}
// 建议使用谷歌protobuf规范 遵循PB语法检查 
// 谷歌protobuf规范地址：https://developers.google.com/protocol-buffers/docs/style
// Proto格式检查（Tencent）包含：Google protobuf规范和数据校验检查 

// 不建议使用 google/protobuf/any.proto 
// any强依赖package type.googleapis.com/_packagename_._messagename_.   
// https://developers.google.com/protocol-buffers/docs/proto3#any 

// tRPC-Go数据校验模块（**移除注释使用**） 
// tsecstr仅允许中英文字母、数字、=、+、/、@、#、_、-传入。注意，字符集不包括空格、|等符号，如有需要，请自定义校验表达式。
// 详参见规则手册：https://iwiki.woa.com/pages/viewpage.action?pageId=241919333  

/**
 * mcn管理台相关接口
 *
 * @generated from protobuf service trpc.creator_center.mcn.Management
 */
export class ManagementClient implements IManagementClient, ServiceInfo {
    typeName = Management.typeName;
    methods = Management.methods;
    options = Management.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * 清退
     *
     * @generated from protobuf rpc: Clear
     */
    clear(input: ClearReq, options?: RpcOptions): UnaryCall<ClearReq, ClearRsp> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ClearReq, ClearRsp>("unary", this._transport, method, opt, input);
    }
    /**
     * 清退 (trpc接口)
     *
     * @generated from protobuf rpc: ClearMcn
     */
    clearMcn(input: ClearMcnReq, options?: RpcOptions): UnaryCall<ClearMcnReq, ClearMcnRsp> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ClearMcnReq, ClearMcnRsp>("unary", this._transport, method, opt, input);
    }
    /**
     * 校验代结算状态修改白名单的申请条件
     *
     * @generated from protobuf rpc: BatchCheckIncomeStatusModificationWhitelistConditions
     */
    batchCheckIncomeStatusModificationWhitelistConditions(input: BatchCheckIncomeStatusModificationWhitelistConditionsReq, options?: RpcOptions): UnaryCall<BatchCheckIncomeStatusModificationWhitelistConditionsReq, BatchCheckIncomeStatusModificationWhitelistConditionsRsp> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<BatchCheckIncomeStatusModificationWhitelistConditionsReq, BatchCheckIncomeStatusModificationWhitelistConditionsRsp>("unary", this._transport, method, opt, input);
    }
}
